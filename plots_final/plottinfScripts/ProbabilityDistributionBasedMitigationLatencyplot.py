from sklearn import preprocessing
import matplotlib.pyplot as plt 
import numpy as np 


main_array_20 = [1.1376299858093262, 0.549537181854248, 0.524554967880249, 0.504234790802002, 0.4705209732055664, 0.42352795600891113, 0.4463162422180176, 0.3900618553161621, 0.30500221252441406, 0.261401891708374, 0.23780345916748047, 0.24897336959838867, 0.2353043556213379, 0.21806764602661133, 0.2196657657623291, 0.2006673812866211, 0.23908281326293945, 0.17048978805541992, 0.22505664825439453, 0.1956949234008789, 0.23218488693237305]
main_array_10 = [0.6394755840301514, 0.2543308734893799, 0.24902844429016113, 0.3383662700653076, 0.17924928665161133, 0.15036773681640625, 0.11535120010375977, 0.1645646095275879, 0.14660024642944336, 0.11260604858398438, 0.07937932014465332]
main_array_15 = [0.9523863792419434, 0.4360332489013672, 0.3868722915649414, 0.376542329788208, 0.31713294982910156, 0.3311786651611328, 0.2809598445892334, 0.28084230422973633, 0.23125576972961426, 0.19208931922912598, 0.16405534744262695, 0.21415257453918457, 0.1342601776123047, 0.15943121910095215, 0.145796537399292, 0.1855013370513916]
# normalized_arr = preprocessing.normalize([main_array_10])
# main_array_10 = normalized_arr[0]
# normalized_arr = preprocessing.normalize([main_array_15])
# main_array_15 = normalized_arr[0]
# normalized_arr = preprocessing.normalize([main_array_20])
# main_array_20 = normalized_arr[0]


node_10 = [(x / 10)*100 for x in range(11)]
node_15 = [(x / 15) * 100 for x in range(16)]
node_20 = [(x / 20)* 100 for x in range(21)]



plt.title("Probability Distribution Based Mitigation")

plt.xlabel("% Nodes Fail")
plt.ylabel("Latency(s)")
plt.grid()
plt.plot(node_10 , main_array_10 , label = "Total Node - 10")
plt.plot(node_15 , main_array_15 , label = "Total Node - 15")
plt.plot(node_20 , main_array_20 , label = "Total Node - 20")
plt.legend()
plt.show()